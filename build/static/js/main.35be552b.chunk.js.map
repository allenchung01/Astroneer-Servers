{"version":3,"sources":["ServerListing.js","App.js","index.js"],"names":["ServerListing","props","listing","useState","popUpIsVisible","setPopUpIsVisible","className","onMouseEnter","onMouseLeave","server_description","server_status","server_name","owner_name","ip_address","App","serverListings","setServerListings","serverName","setServerName","ownerName","setOwnerName","ipAddress","setIpAddress","serverDescription","setServerDescription","useEffect","axios","get","then","response","data","catch","error","console","log","map","index","onSubmit","post","result","onChange","event","target","value","placeholder","required","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAsCeA,MAnCf,SAAuBC,GACrB,IAAQC,EAAYD,EAAZC,QACR,EAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEA,OACE,sBACEC,UAAU,iBACVC,aAAc,WACZF,GAAkB,IAEpBG,aAAc,WACZH,GAAkB,IANtB,UASE,qBACEC,UACEF,EACI,4BACA,2BAJR,SAOE,4BAAIF,EAAQO,uBAEd,sBAAKH,UAAU,iBAAf,UACE,sBACEA,UAAWJ,EAAQQ,cAAgB,YAAc,aAEnD,6BAAKR,EAAQS,iBAEf,yCAAYT,EAAQU,cACpB,8CAAiBV,EAAQW,kB,8BCyEhBC,MAlGf,WACE,MAA4CX,mBAAS,IAArD,mBAAOY,EAAP,KAAuBC,EAAvB,KACA,EAAoCb,mBAAS,IAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KACA,EAAkCf,mBAAS,IAA3C,mBAAOgB,EAAP,KAAkBC,EAAlB,KACA,EAAkCjB,mBAAS,IAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAAkDnB,mBAAS,IAA3D,mBAAOoB,EAAP,KAA0BC,EAA1B,KAgCA,OA9BAC,qBAAU,WACRC,IACGC,IAAI,uDACJC,MAAK,SAACC,GACLb,EAAkBa,EAASC,SAE5BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAsBD,sBAAK1B,UAAU,MAAf,UACE,8BACE,qBAAIA,UAAU,UAAd,UACE,sBAAKA,UAAU,OAAf,UACE,yCACA,wCACA,2CAEF,qBAAKA,UAAU,aACf,4DAGJ,sBAAKA,UAAU,eAAf,UACE,kDACCS,EAAeoB,KAAI,SAACjC,EAASkC,GAC5B,OAAO,cAAC,EAAD,CAAelC,QAASA,GAAckC,MAE/C,uBAAMC,SArCO,WACjB,IAAMnC,EAAU,CACdS,YAAaM,EACbL,WAAYO,EACZN,WAAYQ,EACZZ,mBAAoBc,EACpBb,eAAe,GAEjBgB,IACGY,KAAK,sDAAuDpC,GAC5D0B,MAAK,SAACW,GACLvB,EAAkB,GAAD,mBAAKD,GAAL,CAAqBb,KACtC+B,QAAQC,IAAIK,EAAOT,SAEpBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAsBZ,UACE,+CACA,sBAAK1B,UAAU,SAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBACEkC,SAAU,SAACC,GACTvB,EAAcuB,EAAMC,OAAOC,QAE7BC,YAAY,cACZC,UAAQ,IAEV,uBACEL,SAAU,SAACC,GACTrB,EAAaqB,EAAMC,OAAOC,QAE5BC,YAAY,aACZC,UAAQ,IAEV,uBACEL,SAAU,SAACC,GACTnB,EAAamB,EAAMC,OAAOC,QAE5BC,YAAY,aACZC,UAAQ,OAGZ,qBAAKvC,UAAU,eAAf,SACE,0BACEkC,SAAU,SAACC,GACTjB,EAAqBiB,EAAMC,OAAOC,QAEpCC,YAAY,wBACZC,UAAQ,SAId,uBAAOC,KAAK,qBC/FtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35be552b.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./ServerListing.css\";\n\nfunction ServerListing(props) {\n  const { listing } = props;\n  const [popUpIsVisible, setPopUpIsVisible] = useState(false);\n\n  return (\n    <div\n      className=\"server-listing\"\n      onMouseEnter={() => {\n        setPopUpIsVisible(true);\n      }}\n      onMouseLeave={() => {\n        setPopUpIsVisible(false);\n      }}\n    >\n      <div\n        className={\n          popUpIsVisible\n            ? \"popup-description-visible\"\n            : \"popup-description-hidden\"\n        }\n      >\n        <p>{listing.server_description}</p>\n      </div>\n      <div className=\"server-heading\">\n        <span\n          className={listing.server_status ? \"dot-green\" : \"dot-grey\"}\n        ></span>\n        <h2>{listing.server_name}</h2>\n      </div>\n      <h3>Owner: {listing.owner_name}</h3>\n      <h3>IP Address: {listing.ip_address}</h3>\n    </div>\n  );\n}\n\nexport default ServerListing;\n","import \"./App.css\";\nimport \"./ServerListing.js\";\nimport \"./ServerListingForm.css\";\nimport \"./RoundedTriangle.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ServerListing from \"./ServerListing\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [serverListings, setServerListings] = useState([]);\n  const [serverName, setServerName] = useState(\"\");\n  const [ownerName, setOwnerName] = useState(\"\");\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [serverDescription, setServerDescription] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"https://astroneer-servers.herokuapp.com/api/servers\")\n      .then((response) => {\n        setServerListings(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const postServer = () => {\n    const listing = {\n      server_name: serverName,\n      owner_name: ownerName,\n      ip_address: ipAddress,\n      server_description: serverDescription,\n      server_status: true,\n    };\n    axios\n      .post(\"https://astroneer-servers.herokuapp.com/api/servers\", listing)\n      .then((result) => {\n        setServerListings([...serverListings, listing]);\n        console.log(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul className=\"nav-bar\">\n          <div className=\"tabs\">\n            <li>SERVERS</li>\n            <li>PAGE 2</li>\n            <li>PAGE 3</li>\n          </div>\n          <div className=\"triangle\"></div>\n          <h1>ASTRONEER-SERVERS.com</h1>\n        </ul>\n      </nav>\n      <div className=\"main-content\">\n        <h1>Joinable Servers</h1>\n        {serverListings.map((listing, index) => {\n          return <ServerListing listing={listing} key={index} />;\n        })}\n        <form onSubmit={postServer}>\n          <h1>Add a Server.</h1>\n          <div className=\"inputs\">\n            <div className=\"left-inputs\">\n              <input\n                onChange={(event) => {\n                  setServerName(event.target.value);\n                }}\n                placeholder=\"server name\"\n                required\n              ></input>\n              <input\n                onChange={(event) => {\n                  setOwnerName(event.target.value);\n                }}\n                placeholder=\"owner name\"\n                required\n              ></input>\n              <input\n                onChange={(event) => {\n                  setIpAddress(event.target.value);\n                }}\n                placeholder=\"ip address\"\n                required\n              ></input>\n            </div>\n            <div className=\"right-inputs\">\n              <textarea\n                onChange={(event) => {\n                  setServerDescription(event.target.value);\n                }}\n                placeholder=\"server description...\"\n                required\n              ></textarea>\n            </div>\n          </div>\n          <input type=\"submit\"></input>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}