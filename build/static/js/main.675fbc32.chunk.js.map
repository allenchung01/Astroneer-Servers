{"version":3,"sources":["redux/User/userTypes.js","redux/User/userReducer.js","redux/rootReducer.js","redux/store.js","Components/NavigationBar.js","redux/User/userActions.js","firebase.js","Components/App.js","Components/ServerListing.js","api/servers.js","Components/AddServerForm.js","Components/Paginate.js","firebase-auth.js","Components/Home.js","Components/SignUp.js","Components/LogIn.js","Components/MyServers.js","index.js"],"names":["UPDATE_USER","INITIAL_STATE","user","rootReducer","state","action","type","payload","store","createStore","connect","props","console","log","className","to","href","email","updateUser","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","err","auth","onAuthStateChanged","authUser","currentUser","getIdToken","then","idToken","axios","defaults","headers","common","catch","dispatch","App","children","ServerListing","listing","useState","popUpIsVisible","setPopUpIsVisible","onMouseEnter","onMouseLeave","server_description","server_status","server_name","owner_name","server_url","postServer","callback","a","post","result","data","error","AddServerForm","serverListings","setServerListings","serverName","setServerName","ownerName","setOwnerName","serverUrl","setServerUrl","serverDescription","setServerDescription","onChange","event","target","value","placeholder","required","onClick","Paginate","changePage","pageCount","previousLabel","nextLabel","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","pageClassName","signOutUser","signOut","Home","pageNumber","setPageNumber","listingsVisited","currentPageListings","slice","map","index","Math","ceil","useEffect","get","response","getServers","selected","SignUp","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","history","useHistory","autoComplete","createUserWithEmailAndPassword","userCredential","createUserAccount","message","push","LogIn","signInWithEmailAndPassword","loginUser","MyServers","uid","myServers","setMyServers","concat","server","ReactDOM","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.675fbc32.chunk.js","sourcesContent":["export const UPDATE_USER = \"UPDATE_USER\";\n","import { UPDATE_USER } from \"./userTypes\";\n\nconst INITIAL_STATE = {\n  user: null,\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\n\nimport userReducer from \"./User/userReducer.js\";\n\nconst rootReducer = userReducer;\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"../Styles/NavigationBar.css\";\n\nfunction NavigationBar(props) {\n  const { user } = props;\n\n  console.log(props);\n\n  return (\n    <nav>\n      <ul className=\"nav-bar\">\n        <div className=\"tabs\">\n          <Link to=\"/\">\n            <li>HOME</li>\n          </Link>\n          <a href=\"https://astroneer.space/dedicatedserver/\">\n            <li>OFFICIAL SITE</li>\n          </a>\n          <Link to=\"/servers\" user={user}>\n            <li>MY SERVERS</li>\n          </Link>\n        </div>\n        <div className=\"right-items\">\n          {user ? <h3>{user.email}</h3> : null}\n          {user ? null : (\n            <Link className=\"nav-bar-button\" to=\"/log-in\">\n              Log In\n            </Link>\n          )}\n          {user ? null : (\n            <Link className=\"nav-bar-button\" to=\"/sign-up\">\n              Sign Up\n            </Link>\n          )}\n          <Link className=\"nav-bar-title\" to=\"/\">\n            ASTRONEER SERVERS\n          </Link>\n        </div>\n      </ul>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(NavigationBar);\n","import { UPDATE_USER } from \"./userTypes\";\n\nexport const updateUser = (payload) => {\n  return {\n    type: UPDATE_USER,\n    payload,\n  };\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport axios from \"axios\";\n\nimport store from \"./redux/store.js\";\nimport { updateUser } from \"./redux/User/userActions\";\n\nconst config = {\n  apiKey: \"AIzaSyDdkkN7jp8H_P2fPLffNRxC3nLnmgYkbwE\",\n  authDomain: \"astroneer-servers.firebaseapp.com\",\n  projectId: \"astroneer-servers\",\n  storageBucket: \"astroneer-servers.appspot.com\",\n  messagingSenderId: \"1073001617795\",\n  appId: \"1:1073001617795:web:2e49b84a7d64255d603eb6\",\n  measurementId: \"G-5P60X3125R\",\n};\n\nif (!firebase.apps.length) {\n  try {\n    firebase.initializeApp(config);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfirebase.auth().onAuthStateChanged((authUser) => {\n  console.log(\"auth state did change\");\n  console.log(authUser);\n  if (authUser) {\n    firebase\n      .auth()\n      .currentUser.getIdToken()\n      .then((idToken) => {\n        axios.defaults.headers.common[\"Authorization\"] = idToken;\n      })\n      .catch();\n    store.dispatch(updateUser({ user: authUser }));\n  } else {\n    axios.defaults.headers.common[\"Authorization\"] = null;\n    store.dispatch(updateUser({ user: null }));\n  }\n});\n\nexport const auth = firebase.auth();\n","import React, { useState } from \"react\";\n\nimport NavigationBar from \"./NavigationBar.js\";\nimport { auth } from \"../firebase.js\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      {props.children}\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nimport \"../Styles/ServerListing.css\";\n\nfunction ServerListing(props) {\n  const { listing } = props;\n  const [popUpIsVisible, setPopUpIsVisible] = useState(false);\n\n  return (\n    <div\n      className=\"server-listing\"\n      onMouseEnter={() => {\n        setPopUpIsVisible(true);\n      }}\n      onMouseLeave={() => {\n        setPopUpIsVisible(false);\n      }}\n    >\n      <div\n        className={\n          popUpIsVisible\n            ? \"popup-description-visible\"\n            : \"popup-description-hidden\"\n        }\n      >\n        <p>{listing.server_description}</p>\n      </div>\n      <div className=\"server-heading\">\n        <span\n          className={listing.server_status ? \"dot-green\" : \"dot-grey\"}\n        ></span>\n        <h2>{listing.server_name}</h2>\n      </div>\n      <h3>Owner: {listing.owner_name}</h3>\n      <h3>Server URL: {listing.server_url}</h3>\n    </div>\n  );\n}\n\nexport default ServerListing;\n","import axios from \"axios\";\n\n//const url = \"https://astroneer-servers.herokuapp.com\";\n//const url = \"http://localhost:3001\";\n\n// Retrieves a list of all posted servers.\nexport const getServers = (setServerListings) => {\n  axios\n    .get(\"https://astroneer-servers.herokuapp.com/api/servers\")\n    .then((response) => {\n      setServerListings(response.data);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\n// Retrieves a list of all servers posted by the given user\nexport const getMyServers = (uid, callback) => {\n  axios\n    .get(\"https://astroneer-servers.herokuapp.com/api/servers\".concat(uid))\n    .then((response) => {\n      callback(response.data);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\n// Posts a server listing with the given information, and then executes the callback.\nexport const postServer = async (listing, callback) => {\n  axios\n    .post(\"https://astroneer-servers.herokuapp.com/api/servers\", listing)\n    .then((result) => {\n      callback();\n      console.log(result.data);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n","import React, { useState } from \"react\";\n\nimport { postServer } from \"../api/servers\";\nimport \"../Styles/AddServerForm.css\";\n\nfunction AddServerForm(props) {\n  const { serverListings, setServerListings } = props;\n\n  const [serverName, setServerName] = useState(\"\");\n  const [ownerName, setOwnerName] = useState(\"\");\n  const [serverUrl, setServerUrl] = useState(\"\");\n  const [serverDescription, setServerDescription] = useState(\"\");\n\n  const onSubmit = () => {\n    const listing = {\n      server_name: serverName,\n      owner_name: ownerName,\n      server_url: serverUrl,\n      server_description: serverDescription,\n      server_status: true,\n    };\n    postServer(listing, () => {\n      setServerListings([...serverListings, listing]);\n    });\n  };\n\n  return (\n    <form>\n      <h1>Add a Server</h1>\n      <div className=\"inputs\">\n        <div className=\"left-inputs\">\n          <input\n            onChange={(event) => {\n              setServerName(event.target.value);\n            }}\n            placeholder=\"server name\"\n            required\n          ></input>\n          <input\n            onChange={(event) => {\n              setOwnerName(event.target.value);\n            }}\n            placeholder=\"owner name\"\n            required\n          ></input>\n          <input\n            onChange={(event) => {\n              setServerUrl(event.target.value);\n            }}\n            placeholder=\"server url\"\n            required\n          ></input>\n        </div>\n        <div className=\"right-inputs\">\n          <textarea\n            onChange={(event) => {\n              setServerDescription(event.target.value);\n            }}\n            placeholder=\"server description...\"\n            required\n          ></textarea>\n        </div>\n      </div>\n      <input type=\"button\" onClick={onSubmit} value=\"Add Server\" />\n    </form>\n  );\n}\n\nexport default AddServerForm;\n","import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nimport \"../Styles/Paginate.css\";\n\nfunction Paginate(props) {\n  const { changePage, pageCount } = props;\n\n  return (\n    <ReactPaginate\n      previousLabel={\"←\"}\n      nextLabel={\"→\"}\n      pageCount={pageCount}\n      onPageChange={changePage}\n      containerClassName=\"pagination-container\"\n      previousLinkClassName=\"previous-link\"\n      nextLinkClassName=\"next-link\"\n      disabledClassName=\"pagination-disabled\"\n      activeClassName=\"pagination-active\"\n      pageClassName=\"pagination-page\"\n    />\n  );\n}\n\nexport default Paginate;\n","import { auth } from \"./firebase.js\";\n\nexport const createUserAccount = (email, password, callback) => {\n  auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      callback();\n    })\n    .catch((error) => {\n      callback(error);\n    });\n};\n\nexport const loginUser = (email, password, callback) => {\n  auth\n    .signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      callback();\n    })\n    .catch((error) => {\n      callback(error);\n    });\n};\n\nexport const signOutUser = () => {\n  auth\n    .signOut()\n    .then(() => {\n      console.log(\"Signed Out\");\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport ServerListing from \"./ServerListing.js\";\nimport AddServerForm from \"./AddServerForm.js\";\nimport Paginate from \"./Paginate.js\";\nimport \"../Styles/ServerListing.css\";\nimport \"../Styles/Home.css\";\nimport \"../Styles/AddServerForm.css\";\nimport \"../Styles/Paginate.css\";\nimport { getServers } from \"../api/servers.js\";\nimport { signOutUser } from \"../firebase-auth.js\";\n\nfunction Home() {\n  const [serverListings, setServerListings] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n\n  const listingsPerPage = 12;\n  const listingsVisited = pageNumber * listingsPerPage;\n  const currentPageListings = serverListings\n    .slice(listingsVisited, listingsVisited + listingsPerPage)\n    .map((listing, index) => {\n      return <ServerListing listing={listing} key={index} />;\n    });\n  const pageCount = Math.ceil(serverListings.length / listingsPerPage);\n\n  useEffect(() => {\n    getServers(setServerListings);\n  }, []);\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  return (\n    <div className=\"main-content\">\n      <h1>Joinable Servers</h1>\n      {currentPageListings}\n      <Paginate pageCount={pageCount} changePage={changePage} />\n      <AddServerForm\n        serverListings={serverListings}\n        setServerListings={setServerListings}\n      />\n      <h1>Log Out</h1>\n      <input type=\"button\" onClick={signOutUser} value=\"Sign Out\" />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { createUserAccount } from \"../firebase-auth.js\";\nimport \"../Styles/LogIn.css\";\n\nfunction SignUp() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const history = useHistory();\n\n  const onSubmit = () => {\n    if (password === confirmPassword) {\n      createUserAccount(email, password, (error) => {\n        if (!error) {\n          history.push(\"/\");\n        } else {\n          setErrorMessage(error.message);\n        }\n      });\n    } else {\n      setErrorMessage(\"Passwords do not match.\");\n    }\n  };\n\n  return (\n    <div className=\"log-in-page\">\n      <form>\n        <h1>Sign Up</h1>\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n          autoComplete=\"email\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n          autoComplete=\"new-password\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"confirm password\"\n          onChange={(event) => {\n            setConfirmPassword(event.target.value);\n          }}\n          autoComplete=\"new-password\"\n        />\n        {errorMessage ? (\n          <h3 className=\"error-message\">{errorMessage}</h3>\n        ) : null}\n        <input type=\"button\" onClick={onSubmit} value=\"Sign Up\" />\n      </form>\n    </div>\n  );\n}\nexport default SignUp;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { loginUser } from \"../firebase-auth.js\";\nimport \"../Styles/LogIn.css\";\n\nfunction LogIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const history = useHistory();\n\n  const onSubmit = () => {\n    loginUser(email, password, (error) => {\n      if (!error) {\n        history.push(\"/\");\n      } else {\n        setErrorMessage(error.message);\n      }\n    });\n  };\n\n  return (\n    <div className=\"log-in-page\">\n      <form>\n        <h1>Log In</h1>\n        <input\n          placeholder=\"email\"\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n          autoComplete=\"email\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n          autoComplete=\"current-password\"\n        />\n        {errorMessage ? (\n          <h3 className=\"error-message\">{errorMessage}</h3>\n        ) : null}\n        <input type=\"button\" onClick={onSubmit} value=\"Log In\" />\n      </form>\n    </div>\n  );\n}\n\nexport default LogIn;\n","import React, { useState, useEffect } from \"react\";\n\nimport ServerListing from \"./ServerListing\";\nimport { getMyServers } from \"../api/servers.js\";\n\nfunction MyServers(props) {\n  const { user } = props;\n\n  const [myServers, setMyServers] = useState([]);\n\n  useEffect(\n    getMyServers(user, (data) => {\n      setMyServers(data);\n    }),\n    []\n  );\n\n  return (\n    <div>\n      {myServers.map((server) => {\n        <ServerListing listing={server} />;\n      })}\n    </div>\n  );\n}\n\nexport default MyServers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from \"./Components/App.js\";\nimport Home from \"./Components/Home.js\";\nimport SignUp from \"./Components/SignUp.js\";\nimport LogIn from \"./Components/LogIn.js\";\nimport MyServers from \"./Components/MyServers.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/log-in\" component={LogIn} />\n          <Route exact path=\"/sign-up\" component={SignUp} />\n          <Route exact path=\"/servers\" component={MyServers} />\n        </App>\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}